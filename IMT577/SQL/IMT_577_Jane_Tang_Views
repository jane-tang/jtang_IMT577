/*****************************************
Course: IMT 577
Instructor: Sean Pettersen
Name: Jane Tang
Module 8.15 Final Data Warehouse Submission
Date: 5/26/2022
Notes:
    1. Create simple view
    2. Create aggregate view
*****************************************/

--Simple Views
CREATE SECURE VIEW Dim_Channel_View
AS
SELECT
    DimChannelID
	,ChannelID
    ,ChannelCategoryID
    ,ChannelName
    ,ChannelCategory
FROM Dim_Channel;


CREATE SECURE VIEW Dim_Product_View
AS
SELECT
    DimProductID
	,SourceProductID
	,SourceProductTypeID
	,SourceProductCategoryID
    ,ProductName
    ,ProductType
    ,ProductCategory
    ,ProductRetailPrice
    ,ProductWholesalePrice
    ,ProductCost
    ,ProductRetailProfit
    ,ProductWholesaleUnitProfit
    ,ProductProfitMarginUnitPercent
FROM DIM_PRODUCT;


CREATE SECURE VIEW Dim_Location_View
AS
SELECT
    DimLocationID 
	,SourceLocationID
    ,PostalCode  
    ,Address
    ,City
    ,Region
    ,Country
FROM DIM_LOCATION;


CREATE SECURE VIEW Dim_Store_View
AS
SELECT
    DimStoreID
	,DimLocationID
    ,StoreID
    ,StoreNumber
    ,StoreManager
FROM DIM_STORE;


CREATE SECURE VIEW Dim_Reseller_View
AS
SELECT
    DimResellerID
	,DimLocationID 
    ,ResellerID
    ,ResellerName
    ,ContactName
    ,PhoneNumber
    ,Email
FROM DIM_RESELLER;


CREATE SECURE VIEW Dim_Customer_View
AS
SELECT
    DimCustomerID
	,DimLocationID
    ,CustomerID
    ,FullName
    ,FirstName
    ,LastName
    ,Gender
    ,EmailAddress  
    ,PhoneNumber
FROM DIM_CUSTOMER;


CREATE SECURE VIEW Dim_Date_View
AS
SELECT
        DATE_PKEY,
		DATE,
        FULL_DATE_DESC,
		DAY_NUM_IN_WEEK,
		DAY_NUM_IN_MONTH,
		DAY_NUM_IN_YEAR,
		DAY_NAME,
		DAY_ABBREV,
		WEEKDAY_IND,
		US_HOLIDAY_IND,
        /*<COMPANYNAME>*/_HOLIDAY_IND,
		MONTH_END_IND,
		WEEK_BEGIN_DATE_NKEY,
		WEEK_BEGIN_DATE,
		WEEK_END_DATE_NKEY,
		WEEK_END_DATE,
		WEEK_NUM_IN_YEAR,
		MONTH_NAME,
		MONTH_ABBREV,
		MONTH_NUM_IN_YEAR,
		YEARMONTH,
		QUARTER,
		YEARQUARTER,
		YEAR,
		FISCAL_WEEK_NUM,
		FISCAL_MONTH_NUM,
		FISCAL_YEARMONTH,
		FISCAL_QUARTER,
		FISCAL_YEARQUARTER,
		FISCAL_HALFYEAR,
		FISCAL_YEAR,
		SQL_TIMESTAMP,
		CURRENT_ROW_IND,
		EFFECTIVE_DATE,
		EXPIRATION_DATE
FROM DIM_DATE;


CREATE SECURE VIEW Fact_ProductSalesTarget_View
AS
SELECT
     DimProductID
    ,DimTargetDateID
    ,ProductTargetSalesQuantity
FROM Fact_ProductSalesTarget;


CREATE SECURE VIEW Fact_SRCSalesTarget_View
AS
SELECT
     DimStoreID
    ,DimResellerID
    ,DimChannelID
    ,DimTargetDateID
    ,SalesTargetAmount
FROM Fact_SRCSalesTarget;


CREATE SECURE VIEW Fact_SalesActual_View
AS
SELECT
     DimProductID
    ,DimStoreID
    ,DimResellerID
    ,DimCustomerID
    ,DimChannelID
    ,DimSalesDateID
    ,DimLocationID
    ,SalesHeaderID
    ,SalesDetailID
    ,SalesAmount
    ,SalesQuantity
    ,SaleUnitPrice
    ,SaleExtendedCost
    ,SaleTotalProfit
FROM Fact_SalesActual;


--Aggregate Views
--View 1: How are stores 5 and 8 sales compared to target?
CREATE SECURE VIEW STORES_5_8_SALES
AS
SELECT DISTINCT
    S.StoreID
    ,S.StoreNumber
    ,FSA.SalesAmount
    ,FSRC.SalesTargetAmount
    
FROM Fact_SRCSalesTarget AS FSRC
    LEFT OUTER JOIN FACT_SALESACTUAL AS FSA ON FSA.DimStoreID = FSRC.DimStoreID
    LEFT OUTER JOIN DIM_STORE AS S ON S.DimStoreID = FSA.DimStoreID
    LEFT OUTER JOIN DIM_DATE AS D ON D.Date_PKey = FSA.DimSalesDateID
WHERE S.StoreID = 5 OR S.StoreID = 8;

--View 2: Daily product sales for stores 5 and 8
CREATE SECURE VIEW STORES_5_8_DAILY_PRODUCT_SALES
AS
SELECT DISTINCT
    FSA.DimStoreID
    ,S.StoreNumber
    ,FSA.SalesQuantity
    ,FSA.SalesAmount
FROM FACT_SALESACTUAL AS FSA
    LEFT OUTER JOIN DIM_STORE AS S ON S.DimStoreID = FSA.DimStoreID
    LEFT OUTER JOIN DIM_DATE AS D ON FSA.DIMSALESDATEID = D.DATE_PKEY;
    
--View 3: Sales for Men's Casual and Women's Casual
CREATE SECURE VIEW SALES_MENS_WOMENS_CASUAL
AS
SELECT DISTINCT
    FSA.DimProductID
    ,FSA.SalesAmount
    ,P.ProductType
FROM Fact_SalesActual AS FSA
    LEFT OUTER JOIN Dim_Product AS P ON FSA.DimProductID = P.DimProductID
    LEFT OUTER JOIN DIM_DATE AS D ON FSA.DIMSALESDATEID = D.DATE_PKEY
WHERE P.ProductType = 'Men''s Casual' OR P.ProductType = 'Women''s Casual'
AND D.YEAR = 2013 OR D.YEAR = 2014;


--View 4: Sales for Stores 5 & 8 by Product
CREATE SECURE VIEW PRODUCT_SALES_STORE_5_8
AS
SELECT DISTINCT
    FSA.DimStoreID
    ,FSA.SalesAmount
    ,P.ProductType
FROM Fact_SalesActual AS FSA
    LEFT OUTER JOIN Dim_Product AS P ON FSA.DimProductID = P.DimProductID
    LEFT OUTER JOIN DIM_DATE AS D ON P.DimProductID = D.DATE_PKEY
WHERE FSA.DimStoreID = 1 OR FSA.DimStoreID = 5
ORDER BY FSA.DimStoreID;

SELECT * FROM PRODUCT_SALES_STORE_5_8;


--View 5: Target Sales for Stores 5 & 8 by Product (Missing 8 - NULLS)
CREATE SECURE VIEW PRODUCT_TARGET_STORE_5_8
AS
SELECT DISTINCT
    FST.DimStoreID
    ,FST.SalesTargetAmount
    ,P.ProductType
FROM Fact_SRCSalesTarget AS FST
    LEFT OUTER JOIN Fact_SalesActual AS FSA ON FSA.DimStoreID = FST.DimStoreID
    LEFT OUTER JOIN Dim_Product AS P ON FSA.DimProductID = P.DimProductID
    LEFT OUTER JOIN DIM_DATE AS D ON P.DimProductID = D.DATE_PKEY
WHERE FST.DimStoreID = 1 OR FST.DimStoreID = 5
ORDER BY FST.DimStoreID;

SELECT * FROM PRODUCT_TARGET_STORE_5_8;


--View 6: Product Target Quantity for Stores 5 & 8
CREATE SECURE VIEW PRODUCT_Target_Quantity
AS
SELECT DISTINCT
    PST.DimTargetDateID
    ,NVL(S.DimStoreID, -1) AS DimStoreID
    ,PST.ProductTargetSalesQuantity
    ,P.ProductType
FROM Fact_ProductSalesTarget AS PST
    LEFT OUTER JOIN Dim_Store AS S ON PST.DimProductID = S.DimStoreID
    LEFT OUTER JOIN Dim_Product AS P ON PST.DimProductID = P.DimProductID
ORDER BY DimStoreID;
--WHERE P.ProductType = 'Men''s Casual' OR P.ProductType = 'Women''s Casual';
    
SELECT * FROM PRODUCT_Target_Quantity;
    

--View 7: Product Target Sales for Stores 5 & 8
CREATE SECURE VIEW PRODUCT_Target_Sales
AS
SELECT DISTINCT
    SRC.DimTargetDateID
    ,NVL(S.DimStoreID, -1) AS DimStoreID
    ,SRC.SalesTargetAmount
    ,P.ProductType
FROM Fact_SRCSalesTarget AS SRC
    LEFT OUTER JOIN Dim_Store AS S ON SRC.DimStoreID = S.DimStoreID
    LEFT OUTER JOIN Dim_Product AS P ON SRC.DimStoreID = P.DimProductID
--WHERE P.ProductType = 'Men''s Casual' OR P.ProductType = 'Women''s Casual'
ORDER BY DimStoreID;
    
SELECT * FROM PRODUCT_Target_Sales;


--View 8: Day of the Week Sales
CREATE SECURE VIEW DAILY_SALES
AS
SELECT DISTINCT
    TO_VARCHAR(SH.Date::date, 'DY') AS DayofWeek
    ,FSA.SalesAmount
    ,FSA.DimStoreID
FROM Fact_SalesActual AS FSA
    LEFT OUTER JOIN STAGE_SALESHEADER AS SH ON FSA.SalesheaderID = SH.SalesheaderID
    LEFT OUTER JOIN Dim_Store AS S ON FSA.DimStoreID = S.DimStoreID
WHERE FSA.DimStoreID = 1 OR FSA.DimStoreID = 5;

SELECT * FROM DAILY_SALES;


--view 9: state store comparison
CREATE SECURE VIEW STATE_STORE_SALES
AS
SELECT
    L.Region
    ,FSA.SalesAmount
FROM Fact_SalesActual AS FSA
    LEFT OUTER JOIN Dim_Location AS L ON FSA.DimLocationID = L.DimLocationID
ORDER BY L.Region;
    
SELECT * FROM STATE_STORE_SALES;     


--view 10: sales amount performance
CREATE SECURE VIEW ACTUAL_SALES
AS
SELECT
    TO_VARCHAR(SH.Date::date, 'YY') AS Year
    ,FSA.DimStoreID
    ,FSA.SalesAmount
FROM Fact_SalesActual AS FSA
    LEFT OUTER JOIN STAGE_SALESHEADER AS SH ON FSA.SalesheaderID = SH.SalesheaderID
ORDER BY DimStoreID;

SELECT * FROM ACTUAL_SALES


-- VIEW 11: Compare profits for bonus recommendation
CREATE SECURE VIEW BONUS_INCENTIVE
AS
SELECT
    TO_VARCHAR(SH.Date::date, 'YY') AS Year
    ,FSA.DimStoreID
    ,FSA.SaleTotalProfit
    ,P.ProductType
FROM Fact_SalesActual AS FSA
    LEFT OUTER JOIN Dim_Product AS P ON FSA.DimProductID = P.DimProductID
    LEFT OUTER JOIN STAGE_SALESHEADER AS SH ON FSA.SalesheaderID = SH.SalesheaderID
WHERE FSA.DimStoreID = 1 OR FSA.DimStoreID = 5;

SELECT * FROM BONUS_INCENTIVE;
